// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorPoll.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using BlazorPoll.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using BlazorPoll.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using BlazorPoll.Client.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using BlazorPoll.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\Work\Onlab\BlazorPoll\Client\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/vote")]
    public partial class Voting : Microsoft.AspNetCore.Components.ComponentBase, IAsyncDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 50 "D:\Work\Onlab\BlazorPoll\Client\Pages\Voting.razor"
       

    private HubConnection hubConnection;

    public Question Question { get; set; }

    List<int> AnswerIds { get; set; } = new List<int>();

    public bool Answered => AnswerIds.Count == 0;

    private bool voteCasted;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/pollhub"))
            .Build();

        hubConnection.On<Question>("ReceiveQuestion", async (question) =>
        {
            int previousQuestionId = await LocalStorage.GetItemAsync<int>("PreviousQuestionId");
            if (previousQuestionId == question.Id)
            {
                voteCasted = true;
            }
            else
            {
                voteCasted = false;
            }
            AnswerIds.Clear();
            Question = question;
            StateHasChanged();
        });
        await hubConnection.StartAsync();
    }

    public void RadioBoxClicked(int answerId)
    {
        AnswerIds.Clear();
        AnswerIds.Add(answerId);
        StateHasChanged();
        Console.WriteLine(answerId);
    }

    public void CheckBoxClicked(int answerId, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            if (!AnswerIds.Contains(answerId))
            {
                AnswerIds.Add(answerId);
            }
        }
        else
        {
            if (AnswerIds.Contains(answerId))
            {
                AnswerIds.Remove(answerId);
            }
        }
        StateHasChanged();
    }

    public async Task CastVote()
    {
        List<Vote> votes = new List<Vote>();
        foreach (var a in AnswerIds)
        {
            Vote v = new Vote();
            v.AnswerId = a;
            votes.Add(v);
        }
        await VoteService.CastVote(votes);
        await LocalStorage.SetItemAsync("PreviousQuestionId", Question.Id);
        voteCasted = true;
    }


    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocalStorageService LocalStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVoteService VoteService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
