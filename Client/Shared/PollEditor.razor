@inject IPollService PollService
@inject NavigationManager NavigationManager
@using System.Linq

<h1>Create Poll</h1>
<hr />

<EditForm Model="Poll" OnSubmit="HandleSubmit">
    <div class="mb-5 col-5">
        <label class="form-label font-weight-bold">Poll Name</label>
        <input @bind="Poll.Name" class="form-control"/>
    </div>
    @for (int i = 0; i < Questions.Count; i++)
    {
        int indexI = i; int counter = i + 1;

        <div class="col-5">
            <div class="form-group">
                <label>@counter. Question Text</label>
                <div class="row mb-3">
                    <div class="col-md-12">
                        <div class="input-group">
                            <input @bind="Questions[indexI].Text" @bind:event="oninput" class="form-control">
                            <span class="input-group-text" id="basic-addon1">Single Choice?</span>
                            <div class="input-group-text">
                                <input type="checkbox" @bind="Questions[indexI].SingleChoice" class="form-check-input mt-0">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Answers</label>
                    <div class="row">
                        @for (int j = 0; j < Answers[indexI].Count; j++)
                        {
                            int indexJ = j;
                            <div class="col-md-12 mb-2">
                                <div class="input-group">
                                    <input @bind="Answers[indexI][indexJ].Text" @bind:event="oninput" class="form-control">
                                    <div class="input-group-text">
                                        <input type="checkbox" @bind="Answers[indexI][indexJ].CorrectAnswer" class="form-check-input mt-0">
                                    </div>
                                </div>
                            </div>
                            @if (Answers[indexI][Answers[indexI].Count - 1].Text != "")
                            {
                                Answers[indexI].Add(new Answer());
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        @if (Questions[Questions.Count - 1].Text != "")
        {
            Questions.Add(new Question());
            Answers.Add(new List<Answer>());
            Answers[Answers.Count - 1].Add(new Answer());
        }
    }
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>
<hr />

@code {
    [Parameter] public EventCallback HandleSubmit { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public Poll Poll { get; set; } = new Poll();
    [Parameter] public List<Question> Questions { get; set; } = new List<Question>();
    [Parameter] public List<List<Answer>> Answers { get; set; } = new List<List<Answer>>();

    protected override void OnInitialized()
    {
        Questions.Add(new Question());
        Answers.Add(new List<Answer>());
        Answers[Answers.Count - 1].Add(new Answer());
    }

    //async Task HandleSubmit()
    //{
    //    if (Poll.Name is null || Poll.Name == "")
    //        return;
    //    List<Question> questions = Questions.Where(x => x.Text != "").ToList();
    //    if (questions.Count == 0)
    //        return;
    //    for (int j = 0; j < questions.Count; j++)
    //    {
    //        var answers = new List<Answer>();
    //        answers = Answers[j].Where(x => x.Text != "").ToList();
    //        if (answers.Count == 0)
    //            return;
    //        questions[j].Answers = answers;
    //    }
    //    Poll.Questions = questions;
    //    await PollService.CreatePoll(Poll);
    //    NavigationManager.NavigateTo($"/");
    //}
}